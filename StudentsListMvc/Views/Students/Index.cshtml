@model StudentsListMvc.Models.StudentsList
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Studenci";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    if (!String.IsNullOrEmpty(Model.ErrorMsg))
    {
        <hr/>
        <div class="alert alert-danger err-msg" role="alert">
            <strong>Wystąpił problem: </strong>
            @Model.ErrorMsg
        </div>
    }
}

<h3>Wyszukiwanie</h3>

<div id="filters">

    @using (Html.BeginForm("Index", "Students", FormMethod.Get))
    {
        <div class="form-horizontal">

            <div class="form-group">
                @Html.Label("Miasto", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("searchCity", Model.SelectedCity, new { @class = "form-control filter-input" })
                    <input type="submit" value="Filtruj" class="btn btn-default" />
                </div>

            </div>
        </div>
    }

    @using (Html.BeginForm("Index", "Students", FormMethod.Get))
    {
        <div class="form-horizontal">
            <div class="form-group">
                @Html.Label("Grupa", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("selectedGroup", Model.Groups, "--- wybierz grupę ---", htmlAttributes: new { @class = "form-control filter-input", @onchange = "onGroupChange(this.value)" })
                    <input type="submit" value="Grupy" class="btn btn-default" />
                </div>
            </div>
        </div>

    }

</div>

<hr />
<h3>Studenci</h3>

<table class="table table-bordered table-hover">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.SelectedStudent.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SelectedStudent.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SelectedStudent.IndexNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SelectedStudent.BirthDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SelectedStudent.BirthPlace)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Students)
            {
        <tr id="@("stud" + item.IDStudent)">
            <td class="stud-id">
                @Html.DisplayFor(modelItem => item.IDStudent)
            </td>
            <td class="stud-first-name">
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td class="stud-last-name">
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td class="stud-index">
                @Html.DisplayFor(modelItem => item.IndexNo)
            </td>
            <td class="stud-date">
                @Html.DisplayFor(modelItem => item.BirthDate)
            </td>
            <td class="stud-place">
                @Html.DisplayFor(modelItem => item.BirthPlace)
            </td>
            <td class="stud-group">
                @Html.DisplayFor(modelItem => item.IDGroup)
            </td>
            @Html.HiddenFor(modelItem => item.Stamp, new { @class = "stud-stamp" })
            <td>
                <button type="button" class="btn btn-primary" onclick="editStudent(@item.IDStudent)">Edytuj</button>
            </td>
        </tr>
    }
</table>
<br />
Page @(Model.Students.PageCount < Model.Students.PageNumber ? 0 : Model.Students.PageNumber) of @Model.Students.PageCount

@Html.PagedListPager(Model.Students, page => Url.Action("Index",
new { page, currentCity = Model.SelectedCity, currentGroup = Model.SelectedGroup }))

<hr />
        <h3>Edycja</h3>

@using (Html.BeginForm("CUDStudent", "Students"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SelectedStudent.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SelectedStudent.FirstName, new { htmlAttributes = new { @class = "form-control", @id = "edit-first-name" } })
                @Html.ValidationMessageFor(model => model.SelectedStudent.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedStudent.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SelectedStudent.LastName, new { htmlAttributes = new { @class = "form-control", @id = "edit-last-name" } })
                @Html.ValidationMessageFor(model => model.SelectedStudent.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedStudent.IndexNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SelectedStudent.IndexNo, new { htmlAttributes = new { @class = "form-control", @id = "edit-index" } })
                @Html.ValidationMessageFor(model => model.SelectedStudent.IndexNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedStudent.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SelectedStudent.BirthDate, new { htmlAttributes = new { @class = "form-control", @id = "edit-date" } })
                @Html.ValidationMessageFor(model => model.SelectedStudent.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedStudent.BirthPlace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SelectedStudent.BirthPlace, new { htmlAttributes = new { @class = "form-control", @id = "edit-place" } })
                @Html.ValidationMessageFor(model => model.SelectedStudent.BirthPlace, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.SelectedStudent.IDGroup, new { @id = "groupid" })
        @Html.HiddenFor(model => model.SelectedStudent.IDStudent, new { @id = "studid" })
        @Html.HiddenFor(model => model.SelectedCity)
        @Html.HiddenFor(model => model.SelectedGroup)
        @Html.HiddenFor(model => model.Page)
        @Html.HiddenFor(model => model.SelectedStudent.Stamp, new { @id = "edit-stud-stamp" })
        


        <div class="col-md-offset-2 col-md-10 CUDpane">

            <div class="form-group">
                <div>
                    <button type="submit" name="command" value="Create" class="btn btn-default">Nowy</button>
                </div>
            </div>

            <div class="form-group">
                <div>
                    <button type="submit" name="command" value="Update" class="btn btn-default">Zapisz</button>
                </div>
            </div>

            <div class="form-group">
                <div>
                    <button type="submit" name="command" value="Delete" class="btn btn-default">Usuń</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            <script>
                function onGroupChange(newId) {
                    $("#groupid").val(newId);
                }

                function editStudent(rowId) {
                    var prnt = $("#stud" + rowId);
                    $("#edit-first-name").val(prnt.find(".stud-first-name").text().trim());
                    $("#edit-last-name").val(prnt.find(".stud-last-name").text().trim());
                    $("#edit-index").val(prnt.find(".stud-index").text().trim());
                    $("#edit-date").val(prnt.find(".stud-date").text().trim());
                    $("#edit-place").val(prnt.find(".stud-place").text().trim());
                    $("#groupid").val(prnt.find(".stud-group").text().trim());
                    $("#studid").val(prnt.find(".stud-id").text().trim());
                    $("#edit-stud-stamp").val(prnt.find(".stud-stamp").val());
                }
            </script>   
    <script src="@Url.Content("~/Scripts/moment.js")"></script>
    <script>
        jQuery.validator.addMethod("date", function (value, element) {
            return this.optional(element) || moment(value, "DD/MM/YYYY").isValid();
        }, "Wpisz poprawną datę w formacie DD/MM/RRRR");
    </script>
}
